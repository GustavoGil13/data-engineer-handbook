DROP TABLE PLAYERS;

DROP TYPE SEASON_STATS;

DROP TYPE SCORING_CLASS;

CREATE TYPE SEASON_STATS AS (
    SEASON INTEGER
    , GP REAL
    , PTS REAL
    , REB REAL
    , AST REAL
    , NETRTG REAL
    , OREB_PCT REAL
    , DREB_PCT REAL
    , USG_PCT REAL
    , TS_PCT REAL
    , AST_PCT REAL
);

CREATE TYPE SCORING_CLASS AS
ENUM (
    'BAD'
    , 'AVERAGE'
    , 'GOOD'
    , 'STAR'
);


CREATE TABLE PLAYERS (
    PLAYER_NAME TEXT
    , HEIGHT TEXT
    , WEIGHT INTEGER
    , COLLEGE TEXT
    , COUNTRY TEXT
    , DRAFT_YEAR TEXT
    , DRAFT_ROUND TEXT
    , DRAFT_NUMBER TEXT
    , SEASON_STATS SEASON_STATS[]
    , SCORING_CLASS SCORING_CLASS
    , YEARS_SINCE_LAST_ACTIVE INTEGER
    , IS_ACTIVE BOOLEAN
    , CURRENT_SEASON INTEGER
    , PRIMARY KEY(PLAYER_NAME, CURRENT_SEASON)
);



INSERT INTO PLAYERS
WITH YESTERDAY AS (
    SELECT
        *
    FROM
        PLAYERS
    WHERE
        CURRENT_SEASON = 2000
), TODAY AS (
    SELECT
        *
    FROM
        PLAYER_SEASONS
    WHERE
        SEASON = 2001
)
SELECT
    COALESCE(TODAY.PLAYER_NAME, YESTERDAY.PLAYER_NAME) AS PLAYER_NAME
    , COALESCE(TODAY.HEIGHT, YESTERDAY.HEIGHT) AS HEIGHT
    , COALESCE(TODAY.WEIGHT, YESTERDAY.WEIGHT) AS WEIGHT
    , COALESCE(TODAY.COLLEGE, YESTERDAY.COLLEGE) AS COLLEGE
    , COALESCE(TODAY.COUNTRY, YESTERDAY.COUNTRY) AS COUNTRY
    , COALESCE(TODAY.DRAFT_YEAR, YESTERDAY.DRAFT_YEAR) AS DRAFT_YEAR
    , COALESCE(TODAY.DRAFT_ROUND, YESTERDAY.DRAFT_ROUND) AS DRAFT_ROUND
    , COALESCE(TODAY.DRAFT_NUMBER, YESTERDAY.DRAFT_NUMBER) AS DRAFT_NUMBER
    , CASE
        WHEN YESTERDAY.PLAYER_NAME IS NULL THEN -- IF THE PLAYER STARTED TO PLAY ON THE CURRENT SEASON
            ARRAY [
                    ROW (
                        TODAY.SEASON
                        , TODAY.GP
                        , TODAY.PTS
                        , TODAY.REB
                        , TODAY.AST
                        , TODAY.NETRTG
                        , TODAY.OREB_PCT
                        , TODAY.DREB_PCT
                        , TODAY.USG_PCT
                        , TODAY.TS_PCT
                        , TODAY.AST_PCT 
                    )::SEASON_STATS
            ]
        WHEN TODAY.PLAYER_NAME IS NOT NULL THEN YESTERDAY.SEASON_STATS || -- IF THE PLAYER ALREADY PLAYED ON THE PREVIOUS SEASON
            ARRAY [
                ROW (
                    TODAY.SEASON
                    , TODAY.GP
                    , TODAY.PTS
                    , TODAY.REB
                    , TODAY.AST
                    , TODAY.NETRTG
                    , TODAY.OREB_PCT
                    , TODAY.DREB_PCT
                    , TODAY.USG_PCT
                    , TODAY.TS_PCT
                    , TODAY.AST_PCT 
                )::SEASON_STATS
            ]
        ELSE YESTERDAY.SEASON_STATS -- IF THE PLAYER RETIRED
    END AS SEASON_STATS
    , COALESCE(TODAY.SEASON, YESTERDAY.CURRENT_SEASON + 1) AS CURRENT_SEASON
FROM
    TODAY
    FULL JOIN
    YESTERDAY
    ON (
        1 = 1
        AND TODAY.PLAYER_NAME = YESTERDAY.PLAYER_NAME
    )
;

SELECT
*
FROM PLAYERS
WHERE CURRENT_SEASON = 2001
AND UPPER(PLAYER_NAME) = 'MICHAEL JORDAN'
;
-- {"(1996,82,29.6,5.9,4.3,13.7,3.7,3.7,11.8,32.8,20.8)","(1997,82,28.7,5.8,3.5,9.7,4.1,4.1,11,33.3,17.4)","(2001,60,22.9,5.7,5.2,-0.3,2.4,2.4,14.5,35.6,29.5)"}


WITH UNNESTED AS (
SELECT
PLAYER_NAME
, UNNEST(SEASON_STATS) AS SEASON_STATS
FROM PLAYERS
WHERE CURRENT_SEASON = 2001
)
SELECT
PLAYER_NAME
, (SEASON_STATS::SEASON_STATS).*
FROM UNNESTED
;