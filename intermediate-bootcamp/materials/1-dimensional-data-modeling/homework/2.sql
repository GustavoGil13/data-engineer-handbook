INSERT INTO ACTORS
WITH PREVIOUS_YEAR AS (
SELECT
    ACTORID
    , ACTOR
    , FILMS
    , QUALITY_CLASS
    , IS_ACTIVE
    , CURRENT_YEAR
FROM ACTORS
WHERE
    1 = 1
    AND CURRENT_YEAR = 1975
), ACTUAL_YEAR AS (
SELECT -- A ACTOR CAN BE IN MORE THAN ONE MOVIE PER YEAR
    ACTORID
    , ACTOR
    , ARRAY_AGG (
        ROW (
            FILM
            , VOTES
            , RATING
            , FILMID
        )::FILMS
    ) AS FILMS
    , AVG(RATING) AS AVG_RATING
FROM ACTOR_FILMS
WHERE
    1 = 1
    AND YEAR = 1976
GROUP BY
    ACTORID
    , ACTOR
)
SELECT
    COALESCE(AY.ACTORID, PY.ACTORID) AS ACTOR_ID
    , COALESCE(AY.ACTOR, PY.ACTOR) AS ACTOR
    , CASE
        WHEN PY.ACTORID IS NULL THEN AY.FILMS -- IF THE ACTOR STARTED IS CARRIER
        WHEN AY.ACTORID IS NOT NULL THEN PY.FILMS || AY.FILMS -- IF THE ACTORS HAS MOVIES IN THE PREVIOUS YEAR
        ELSE PY.FILMS -- IF THE ACTOR WAS NOT IN MOVIES IN THE PREVIOUS YEAR
    END AS FILMS
    , COALESCE (
        CASE
            WHEN AY.AVG_RATING > 8 THEN 'star'
            WHEN AY.AVG_RATING > 7 AND AY.AVG_RATING <= 8 THEN 'good'
            WHEN AY.AVG_RATING > 6 AND AY.AVG_RATING <= 7 THEN 'average'
            ELSE 'bad'
        END::QUALITY_CLASS
        , PY.QUALITY_CLASS
    ) AS QUALITY_CLASS
    , (AY.ACTORID IS NOT NULL) AS IS_ACTIVE
    , 1976 AS CURRENT_YEAR
FROM
    ACTUAL_YEAR AS AY
    FULL JOIN
    PREVIOUS_YEAR AS PY
    ON (
        1 = 1
        AND AY.ACTORID = PY.ACTORID
    )
WHERE
    1 = 1;