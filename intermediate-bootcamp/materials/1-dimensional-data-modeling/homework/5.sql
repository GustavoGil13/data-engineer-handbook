WITH HISTORICAL_DATA AS (
SELECT
    ACTORID
    , ACTOR
    , QUALITY_CLASS
    , IS_ACTIVE
    , START_DATE
    , END_DATE
    , ROW_NUMBER() OVER (
        PARTITION BY
            ACTORID
        ORDER BY
            START_DATE DESC
    ) AS RN
FROM
    ACTORS_HISTORY_SCD
WHERE
    1 = 1
    AND END_DATE < 1978
), THIS_YEAR_DATA AS (
SELECT
    ACTORID
    , ACTOR
    , QUALITY_CLASS
    , IS_ACTIVE
    , CURRENT_YEAR
FROM
    ACTORS
WHERE
    1 = 1
    AND CURRENT_YEAR = 1978
), NEW_RECORDS AS (
SELECT
    TYD.ACTORID
    , TYD.ACTOR
    , TYD.QUALITY_CLASS
    , TYD.IS_ACTIVE
    , TYD.CURRENT_YEAR AS START_DATE
    , TYD.CURRENT_YEAR AS END_DATE
FROM
    THIS_YEAR_DATA AS TYD
    LEFT JOIN
    HISTORICAL_DATA AS HD
    ON (
        1 = 1
        AND TYD.ACTORID = HD.ACTORID
        AND HD.RN = 1
    )
WHERE
    1 = 1
    AND (
        HD.ACTORID IS NULL
        OR (
            HD.ACTORID IS NOT NULL
            AND (
                TYD.QUALITY_CLASS <> HD.QUALITY_CLASS
                OR TYD.IS_ACTIVE <> HD.IS_ACTIVE
            )
        )
    )
), UNCHANGED_RECORDS AS (
SELECT
    TYD.ACTORID
    , TYD.ACTOR
    , TYD.QUALITY_CLASS
    , TYD.IS_ACTIVE
    , HD.START_DATE AS START_DATE
    , TYD.CURRENT_YEAR AS END_DATE
FROM
    THIS_YEAR_DATA AS TYD
    INNER JOIN
    HISTORICAL_DATA AS HD
    ON (
        1 = 1
        AND TYD.ACTORID = HD.ACTORID
        AND HD.RN = 1
    )
WHERE
    1 = 1
    AND TYD.QUALITY_CLASS = HD.QUALITY_CLASS
    AND TYD.IS_ACTIVE = HD.IS_ACTIVE
), DATASET AS (
SELECT
    ACTORID
    , ACTOR
    , QUALITY_CLASS
    , IS_ACTIVE
    , START_DATE
    , END_DATE
FROM
    HISTORICAL_DATA
WHERE
    RN > 1 -- ALL HISTORY EXCEPT THE MOST RECENT INFORMATION
UNION ALL
SELECT
    ACTORID
    , ACTOR
    , QUALITY_CLASS
    , IS_ACTIVE
    , START_DATE
    , END_DATE
FROM
    UNCHANGED_RECORDS
UNION ALL
SELECT
    ACTORID
    , ACTOR
    , QUALITY_CLASS
    , IS_ACTIVE
    , START_DATE
    , END_DATE
FROM
    NEW_RECORDS
UNION ALL
SELECT -- IF THERE IS A NEWER VERSION OF A RECORD THEN WE NEED TO INSERT THE PREVIOUS MOST RECENT INFORMATION
    HD.ACTORID
    , HD.ACTOR
    , HD.QUALITY_CLASS
    , HD.IS_ACTIVE
    , HD.START_DATE
    , HD.END_DATE
FROM
    HISTORICAL_DATA AS HD
    INNER JOIN
    NEW_RECORDS AS NR
    ON (
        1 = 1
        AND HD.ACTORID = NR.ACTORID
    )
WHERE
    1 = 1
    AND HD.RN = 1
)
SELECT
    *
FROM DATASET